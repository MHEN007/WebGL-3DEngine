class NetherPortal {
    get object() {
        const outerVertices = new Float32Array([
            // KOLOM KIRI
            // depan
            -0.05 - 0.2,  0.05,  0.05,
            -0.05 - 0.2, -0.05,  0.05,
             0.05 - 0.2,  0.05,  0.05,
             0.05 - 0.2,  0.05,  0.05,
            -0.05 - 0.2, -0.05,  0.05,
             0.05 - 0.2, -0.05,  0.05,
             0.05 - 0.2,  0.05, -0.05,
             0.05 - 0.2, -0.05, -0.05,
            -0.05 - 0.2,  0.05, -0.05,
            -0.05 - 0.2,  0.05, -0.05,
             0.05 - 0.2, -0.05, -0.05,
            -0.05 - 0.2, -0.05, -0.05,
            -0.05 - 0.2,  0.05, -0.05,
            -0.05 - 0.2,  0.05,  0.05,
             0.05 - 0.2,  0.05, -0.05,
             0.05 - 0.2,  0.05, -0.05,
            -0.05 - 0.2,  0.05,  0.05,
             0.05 - 0.2,  0.05,  0.05,
            -0.05 - 0.2, -0.05,  0.05,
            -0.05 - 0.2, -0.05, -0.05,
             0.05 - 0.2, -0.05,  0.05,
             0.05 - 0.2, -0.05,  0.05,
            -0.05 - 0.2, -0.05, -0.05,
             0.05 - 0.2, -0.05, -0.05,
             0.05 - 0.2,  0.05,  0.05,
             0.05 - 0.2, -0.05,  0.05,
             0.05 - 0.2,  0.05, -0.05,
             0.05 - 0.2,  0.05, -0.05,
             0.05 - 0.2, -0.05,  0.05,
             0.05 - 0.2, -0.05, -0.05,
            -0.05 - 0.2,  0.05, -0.05,
            -0.05 - 0.2, -0.05, -0.05,
            -0.05 - 0.2,  0.05,  0.05,
            -0.05 - 0.2,  0.05,  0.05,
            -0.05 - 0.2, -0.05, -0.05,
            -0.05 - 0.2, -0.05,  0.05,

            -0.05 - 0.2,  0.05 + 0.1,  0.05,
            -0.05 - 0.2, -0.05 + 0.1,  0.05,
             0.05 - 0.2,  0.05 + 0.1,  0.05,
             0.05 - 0.2,  0.05 + 0.1,  0.05,
            -0.05 - 0.2, -0.05 + 0.1,  0.05,
             0.05 - 0.2, -0.05 + 0.1,  0.05,
             0.05 - 0.2,  0.05 + 0.1, -0.05,
             0.05 - 0.2, -0.05 + 0.1, -0.05,
            -0.05 - 0.2,  0.05 + 0.1, -0.05,
            -0.05 - 0.2,  0.05 + 0.1, -0.05,
             0.05 - 0.2, -0.05 + 0.1, -0.05,
            -0.05 - 0.2, -0.05 + 0.1, -0.05,
            -0.05 - 0.2,  0.05 + 0.1, -0.05,
            -0.05 - 0.2,  0.05 + 0.1,  0.05,
             0.05 - 0.2,  0.05 + 0.1, -0.05,
             0.05 - 0.2,  0.05 + 0.1, -0.05,
            -0.05 - 0.2,  0.05 + 0.1,  0.05,
             0.05 - 0.2,  0.05 + 0.1,  0.05,
            -0.05 - 0.2, -0.05 + 0.1,  0.05,
            -0.05 - 0.2, -0.05 + 0.1, -0.05,
             0.05 - 0.2, -0.05 + 0.1,  0.05,
             0.05 - 0.2, -0.05 + 0.1,  0.05,
            -0.05 - 0.2, -0.05 + 0.1, -0.05,
             0.05 - 0.2, -0.05 + 0.1, -0.05,
             0.05 - 0.2,  0.05 + 0.1,  0.05,
             0.05 - 0.2, -0.05 + 0.1,  0.05,
             0.05 - 0.2,  0.05 + 0.1, -0.05,
             0.05 - 0.2,  0.05 + 0.1, -0.05,
             0.05 - 0.2, -0.05 + 0.1,  0.05,
             0.05 - 0.2, -0.05 + 0.1, -0.05,
            -0.05 - 0.2,  0.05 + 0.1, -0.05,
            -0.05 - 0.2, -0.05 + 0.1, -0.05,
            -0.05 - 0.2,  0.05 + 0.1,  0.05,
            -0.05 - 0.2,  0.05 + 0.1,  0.05,
            -0.05 - 0.2, -0.05 + 0.1, -0.05,
            -0.05 - 0.2, -0.05 + 0.1,  0.05,

            -0.05 - 0.2,  0.05 + 0.2,  0.05,
            -0.05 - 0.2, -0.05 + 0.2,  0.05,
             0.05 - 0.2,  0.05 + 0.2,  0.05,
             0.05 - 0.2,  0.05 + 0.2,  0.05,
            -0.05 - 0.2, -0.05 + 0.2,  0.05,
             0.05 - 0.2, -0.05 + 0.2,  0.05,
             0.05 - 0.2,  0.05 + 0.2, -0.05,
             0.05 - 0.2, -0.05 + 0.2, -0.05,
            -0.05 - 0.2,  0.05 + 0.2, -0.05,
            -0.05 - 0.2,  0.05 + 0.2, -0.05,
             0.05 - 0.2, -0.05 + 0.2, -0.05,
            -0.05 - 0.2, -0.05 + 0.2, -0.05,
            -0.05 - 0.2,  0.05 + 0.2, -0.05,
            -0.05 - 0.2,  0.05 + 0.2,  0.05,
             0.05 - 0.2,  0.05 + 0.2, -0.05,
             0.05 - 0.2,  0.05 + 0.2, -0.05,
            -0.05 - 0.2,  0.05 + 0.2,  0.05,
             0.05 - 0.2,  0.05 + 0.2,  0.05,
            -0.05 - 0.2, -0.05 + 0.2,  0.05,
            -0.05 - 0.2, -0.05 + 0.2, -0.05,
             0.05 - 0.2, -0.05 + 0.2,  0.05,
             0.05 - 0.2, -0.05 + 0.2,  0.05,
            -0.05 - 0.2, -0.05 + 0.2, -0.05,
             0.05 - 0.2, -0.05 + 0.2, -0.05,
             0.05 - 0.2,  0.05 + 0.2,  0.05,
             0.05 - 0.2, -0.05 + 0.2,  0.05,
             0.05 - 0.2,  0.05 + 0.2, -0.05,
             0.05 - 0.2,  0.05 + 0.2, -0.05,
             0.05 - 0.2, -0.05 + 0.2,  0.05,
             0.05 - 0.2, -0.05 + 0.2, -0.05,
            -0.05 - 0.2,  0.05 + 0.2, -0.05,
            -0.05 - 0.2, -0.05 + 0.2, -0.05,
            -0.05 - 0.2,  0.05 + 0.2,  0.05,
            -0.05 - 0.2,  0.05 + 0.2,  0.05,
            -0.05 - 0.2, -0.05 + 0.2, -0.05,
            -0.05 - 0.2, -0.05 + 0.2,  0.05,

            // KOLOM KANAN
            // depan
            -0.05 + 0.1,  0.05,  0.05,
            -0.05 + 0.1, -0.05,  0.05,
             0.05 + 0.1,  0.05,  0.05,
             0.05 + 0.1,  0.05,  0.05,
            -0.05 + 0.1, -0.05,  0.05,
             0.05 + 0.1, -0.05,  0.05,
             0.05 + 0.1,  0.05, -0.05,
             0.05 + 0.1, -0.05, -0.05,
            -0.05 + 0.1,  0.05, -0.05,
            -0.05 + 0.1,  0.05, -0.05,
             0.05 + 0.1, -0.05, -0.05,
            -0.05 + 0.1, -0.05, -0.05,
            -0.05 + 0.1,  0.05, -0.05,
            -0.05 + 0.1,  0.05,  0.05,
             0.05 + 0.1,  0.05, -0.05,
             0.05 + 0.1,  0.05, -0.05,
            -0.05 + 0.1,  0.05,  0.05,
             0.05 + 0.1,  0.05,  0.05,
            -0.05 + 0.1, -0.05,  0.05,
            -0.05 + 0.1, -0.05, -0.05,
             0.05 + 0.1, -0.05,  0.05,
             0.05 + 0.1, -0.05,  0.05,
            -0.05 + 0.1, -0.05, -0.05,
             0.05 + 0.1, -0.05, -0.05,
             0.05 + 0.1,  0.05,  0.05,
             0.05 + 0.1, -0.05,  0.05,
             0.05 + 0.1,  0.05, -0.05,
             0.05 + 0.1,  0.05, -0.05,
             0.05 + 0.1, -0.05,  0.05,
             0.05 + 0.1, -0.05, -0.05,
            -0.05 + 0.1,  0.05, -0.05,
            -0.05 + 0.1, -0.05, -0.05,
            -0.05 + 0.1,  0.05,  0.05,
            -0.05 + 0.1,  0.05,  0.05,
            -0.05 + 0.1, -0.05, -0.05,
            -0.05 + 0.1, -0.05,  0.05,

            -0.05 + 0.1,  0.05 + 0.1,  0.05,
            -0.05 + 0.1, -0.05 + 0.1,  0.05,
             0.05 + 0.1,  0.05 + 0.1,  0.05,
             0.05 + 0.1,  0.05 + 0.1,  0.05,
            -0.05 + 0.1, -0.05 + 0.1,  0.05,
             0.05 + 0.1, -0.05 + 0.1,  0.05,
             0.05 + 0.1,  0.05 + 0.1, -0.05,
             0.05 + 0.1, -0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1, -0.05,
             0.05 + 0.1, -0.05 + 0.1, -0.05,
            -0.05 + 0.1, -0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1,  0.05,
             0.05 + 0.1,  0.05 + 0.1, -0.05,
             0.05 + 0.1,  0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1,  0.05,
             0.05 + 0.1,  0.05 + 0.1,  0.05,
            -0.05 + 0.1, -0.05 + 0.1,  0.05,
            -0.05 + 0.1, -0.05 + 0.1, -0.05,
             0.05 + 0.1, -0.05 + 0.1,  0.05,
             0.05 + 0.1, -0.05 + 0.1,  0.05,
            -0.05 + 0.1, -0.05 + 0.1, -0.05,
             0.05 + 0.1, -0.05 + 0.1, -0.05,
             0.05 + 0.1,  0.05 + 0.1,  0.05,
             0.05 + 0.1, -0.05 + 0.1,  0.05,
             0.05 + 0.1,  0.05 + 0.1, -0.05,
             0.05 + 0.1,  0.05 + 0.1, -0.05,
             0.05 + 0.1, -0.05 + 0.1,  0.05,
             0.05 + 0.1, -0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1, -0.05,
            -0.05 + 0.1, -0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1,  0.05,
            -0.05 + 0.1,  0.05 + 0.1,  0.05,
            -0.05 + 0.1, -0.05 + 0.1, -0.05,
            -0.05 + 0.1, -0.05 + 0.1,  0.05, 

            -0.05 + 0.1,  0.05 + 0.2,  0.05,
            -0.05 + 0.1, -0.05 + 0.2,  0.05,
             0.05 + 0.1,  0.05 + 0.2,  0.05,
             0.05 + 0.1,  0.05 + 0.2,  0.05,
            -0.05 + 0.1, -0.05 + 0.2,  0.05,
             0.05 + 0.1, -0.05 + 0.2,  0.05,
             0.05 + 0.1,  0.05 + 0.2, -0.05,
             0.05 + 0.1, -0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2, -0.05,
             0.05 + 0.1, -0.05 + 0.2, -0.05,
            -0.05 + 0.1, -0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2,  0.05,
             0.05 + 0.1,  0.05 + 0.2, -0.05,
             0.05 + 0.1,  0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2,  0.05,
             0.05 + 0.1,  0.05 + 0.2,  0.05,
            -0.05 + 0.1, -0.05 + 0.2,  0.05,
            -0.05 + 0.1, -0.05 + 0.2, -0.05,
             0.05 + 0.1, -0.05 + 0.2,  0.05,
             0.05 + 0.1, -0.05 + 0.2,  0.05,
            -0.05 + 0.1, -0.05 + 0.2, -0.05,
             0.05 + 0.1, -0.05 + 0.2, -0.05,
             0.05 + 0.1,  0.05 + 0.2,  0.05,
             0.05 + 0.1, -0.05 + 0.2,  0.05,
             0.05 + 0.1,  0.05 + 0.2, -0.05,
             0.05 + 0.1,  0.05 + 0.2, -0.05,
             0.05 + 0.1, -0.05 + 0.2,  0.05,
             0.05 + 0.1, -0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2, -0.05,
            -0.05 + 0.1, -0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2,  0.05,
            -0.05 + 0.1,  0.05 + 0.2,  0.05,
            -0.05 + 0.1, -0.05 + 0.2, -0.05,
            -0.05 + 0.1, -0.05 + 0.2,  0.05,

            // BASE BAWAH
            -0.05,  0.05 - 0.1,  0.05,
            -0.05, -0.05 - 0.1,  0.05,
             0.05,  0.05 - 0.1,  0.05,
             0.05,  0.05 - 0.1,  0.05,
            -0.05, -0.05 - 0.1,  0.05,
             0.05, -0.05 - 0.1,  0.05,
             0.05,  0.05 - 0.1, -0.05,
             0.05, -0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1, -0.05,
             0.05, -0.05 - 0.1, -0.05,
            -0.05, -0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1,  0.05,
             0.05,  0.05 - 0.1, -0.05,
             0.05,  0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1,  0.05,
             0.05,  0.05 - 0.1,  0.05,
            -0.05, -0.05 - 0.1,  0.05,
            -0.05, -0.05 - 0.1, -0.05,
             0.05, -0.05 - 0.1,  0.05,
             0.05, -0.05 - 0.1,  0.05,
            -0.05, -0.05 - 0.1, -0.05,
             0.05, -0.05 - 0.1, -0.05,
             0.05,  0.05 - 0.1,  0.05,
             0.05, -0.05 - 0.1,  0.05,
             0.05,  0.05 - 0.1, -0.05,
             0.05,  0.05 - 0.1, -0.05,
             0.05, -0.05 - 0.1,  0.05,
             0.05, -0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1, -0.05,
            -0.05, -0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1,  0.05,
            -0.05,  0.05 - 0.1,  0.05,
            -0.05, -0.05 - 0.1, -0.05,
            -0.05, -0.05 - 0.1,  0.05,
 
            -0.05 + 0.1,  0.05 - 0.1,  0.05,
            -0.05 + 0.1, -0.05 - 0.1,  0.05,
             0.05 + 0.1,  0.05 - 0.1,  0.05,
             0.05 + 0.1,  0.05 - 0.1,  0.05,
            -0.05 + 0.1, -0.05 - 0.1,  0.05,
             0.05 + 0.1, -0.05 - 0.1,  0.05,
             0.05 + 0.1,  0.05 - 0.1, -0.05,
             0.05 + 0.1, -0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1, -0.05,
             0.05 + 0.1, -0.05 - 0.1, -0.05,
            -0.05 + 0.1, -0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1,  0.05,
             0.05 + 0.1,  0.05 - 0.1, -0.05,
             0.05 + 0.1,  0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1,  0.05,
             0.05 + 0.1,  0.05 - 0.1,  0.05,
            -0.05 + 0.1, -0.05 - 0.1,  0.05,
            -0.05 + 0.1, -0.05 - 0.1, -0.05,
             0.05 + 0.1, -0.05 - 0.1,  0.05,
             0.05 + 0.1, -0.05 - 0.1,  0.05,
            -0.05 + 0.1, -0.05 - 0.1, -0.05,
             0.05 + 0.1, -0.05 - 0.1, -0.05,
             0.05 + 0.1,  0.05 - 0.1,  0.05,
             0.05 + 0.1, -0.05 - 0.1,  0.05,
             0.05 + 0.1,  0.05 - 0.1, -0.05,
             0.05 + 0.1,  0.05 - 0.1, -0.05,
             0.05 + 0.1, -0.05 - 0.1,  0.05,
             0.05 + 0.1, -0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1, -0.05,
            -0.05 + 0.1, -0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1,  0.05,
            -0.05 + 0.1,  0.05 - 0.1,  0.05,
            -0.05 + 0.1, -0.05 - 0.1, -0.05,
            -0.05 + 0.1, -0.05 - 0.1,  0.05,

            -0.05 - 0.1,  0.05 - 0.1,  0.05,
            -0.05 - 0.1, -0.05 - 0.1,  0.05,
             0.05 - 0.1,  0.05 - 0.1,  0.05,
             0.05 - 0.1,  0.05 - 0.1,  0.05,
            -0.05 - 0.1, -0.05 - 0.1,  0.05,
             0.05 - 0.1, -0.05 - 0.1,  0.05,
             0.05 - 0.1,  0.05 - 0.1, -0.05,
             0.05 - 0.1, -0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1, -0.05,
             0.05 - 0.1, -0.05 - 0.1, -0.05,
            -0.05 - 0.1, -0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1,  0.05,
             0.05 - 0.1,  0.05 - 0.1, -0.05,
             0.05 - 0.1,  0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1,  0.05,
             0.05 - 0.1,  0.05 - 0.1,  0.05,
            -0.05 - 0.1, -0.05 - 0.1,  0.05,
            -0.05 - 0.1, -0.05 - 0.1, -0.05,
             0.05 - 0.1, -0.05 - 0.1,  0.05,
             0.05 - 0.1, -0.05 - 0.1,  0.05,
            -0.05 - 0.1, -0.05 - 0.1, -0.05,
             0.05 - 0.1, -0.05 - 0.1, -0.05,
             0.05 - 0.1,  0.05 - 0.1,  0.05,
             0.05 - 0.1, -0.05 - 0.1,  0.05,
             0.05 - 0.1,  0.05 - 0.1, -0.05,
             0.05 - 0.1,  0.05 - 0.1, -0.05,
             0.05 - 0.1, -0.05 - 0.1,  0.05,
             0.05 - 0.1, -0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1, -0.05,
            -0.05 - 0.1, -0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1,  0.05,
            -0.05 - 0.1,  0.05 - 0.1,  0.05,
            -0.05 - 0.1, -0.05 - 0.1, -0.05,
            -0.05 - 0.1, -0.05 - 0.1,  0.05,

            -0.05 - 0.2,  0.05 - 0.1,  0.05,
            -0.05 - 0.2, -0.05 - 0.1,  0.05,
             0.05 - 0.2,  0.05 - 0.1,  0.05,
             0.05 - 0.2,  0.05 - 0.1,  0.05,
            -0.05 - 0.2, -0.05 - 0.1,  0.05,
             0.05 - 0.2, -0.05 - 0.1,  0.05,
             0.05 - 0.2,  0.05 - 0.1, -0.05,
             0.05 - 0.2, -0.05 - 0.1, -0.05,
            -0.05 - 0.2,  0.05 - 0.1, -0.05,
            -0.05 - 0.2,  0.05 - 0.1, -0.05,
             0.05 - 0.2, -0.05 - 0.1, -0.05,
            -0.05 - 0.2, -0.05 - 0.1, -0.05,
            -0.05 - 0.2,  0.05 - 0.1, -0.05,
            -0.05 - 0.2,  0.05 - 0.1,  0.05,
             0.05 - 0.2,  0.05 - 0.1, -0.05,
             0.05 - 0.2,  0.05 - 0.1, -0.05,
            -0.05 - 0.2,  0.05 - 0.1,  0.05,
             0.05 - 0.2,  0.05 - 0.1,  0.05,
            -0.05 - 0.2, -0.05 - 0.1,  0.05,
            -0.05 - 0.2, -0.05 - 0.1, -0.05,
             0.05 - 0.2, -0.05 - 0.1,  0.05,
             0.05 - 0.2, -0.05 - 0.1,  0.05,
            -0.05 - 0.2, -0.05 - 0.1, -0.05,
             0.05 - 0.2, -0.05 - 0.1, -0.05,
             0.05 - 0.2,  0.05 - 0.1,  0.05,
             0.05 - 0.2, -0.05 - 0.1,  0.05,
             0.05 - 0.2,  0.05 - 0.1, -0.05,
             0.05 - 0.2,  0.05 - 0.1, -0.05,
             0.05 - 0.2, -0.05 - 0.1,  0.05,
             0.05 - 0.2, -0.05 - 0.1, -0.05,
            -0.05 - 0.2,  0.05 - 0.1, -0.05,
            -0.05 - 0.2, -0.05 - 0.1, -0.05,
            -0.05 - 0.2,  0.05 - 0.1,  0.05,
            -0.05 - 0.2,  0.05 - 0.1,  0.05,
            -0.05 - 0.2, -0.05 - 0.1, -0.05,
            -0.05 - 0.2, -0.05 - 0.1,  0.05,

            // BASE ATAS
            -0.05,  0.05 + 0.3,  0.05,
            -0.05, -0.05 + 0.3,  0.05,
             0.05,  0.05 + 0.3,  0.05,
             0.05,  0.05 + 0.3,  0.05,
            -0.05, -0.05 + 0.3,  0.05,
             0.05, -0.05 + 0.3,  0.05,
             0.05,  0.05 + 0.3, -0.05,
             0.05, -0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3, -0.05,
             0.05, -0.05 + 0.3, -0.05,
            -0.05, -0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3,  0.05,
             0.05,  0.05 + 0.3, -0.05,
             0.05,  0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3,  0.05,
             0.05,  0.05 + 0.3,  0.05,
            -0.05, -0.05 + 0.3,  0.05,
            -0.05, -0.05 + 0.3, -0.05,
             0.05, -0.05 + 0.3,  0.05,
             0.05, -0.05 + 0.3,  0.05,
            -0.05, -0.05 + 0.3, -0.05,
             0.05, -0.05 + 0.3, -0.05,
             0.05,  0.05 + 0.3,  0.05,
             0.05, -0.05 + 0.3,  0.05,
             0.05,  0.05 + 0.3, -0.05,
             0.05,  0.05 + 0.3, -0.05,
             0.05, -0.05 + 0.3,  0.05,
             0.05, -0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3, -0.05,
            -0.05, -0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3,  0.05,
            -0.05,  0.05 + 0.3,  0.05,
            -0.05, -0.05 + 0.3, -0.05,
            -0.05, -0.05 + 0.3,  0.05,

            // BASE ATAS KIRI
            -0.05 - 0.1,  0.05 + 0.3,  0.05,
            -0.05 - 0.1, -0.05 + 0.3,  0.05,
             0.05 - 0.1,  0.05 + 0.3,  0.05,
             0.05 - 0.1,  0.05 + 0.3,  0.05,
            -0.05 - 0.1, -0.05 + 0.3,  0.05,
             0.05 - 0.1, -0.05 + 0.3,  0.05,
             0.05 - 0.1,  0.05 + 0.3, -0.05,
             0.05 - 0.1, -0.05 + 0.3, -0.05,
            -0.05 - 0.1,  0.05 + 0.3, -0.05,
            -0.05 - 0.1,  0.05 + 0.3, -0.05,
             0.05 - 0.1, -0.05 + 0.3, -0.05,
            -0.05 - 0.1, -0.05 + 0.3, -0.05,
            -0.05 - 0.1,  0.05 + 0.3, -0.05,
            -0.05 - 0.1,  0.05 + 0.3,  0.05,
             0.05 - 0.1,  0.05 + 0.3, -0.05,
             0.05 - 0.1,  0.05 + 0.3, -0.05,
            -0.05 - 0.1,  0.05 + 0.3,  0.05,
             0.05 - 0.1,  0.05 + 0.3,  0.05,
            -0.05 - 0.1, -0.05 + 0.3,  0.05,
            -0.05 - 0.1, -0.05 + 0.3, -0.05,
             0.05 - 0.1, -0.05 + 0.3,  0.05,
             0.05 - 0.1, -0.05 + 0.3,  0.05,
            -0.05 - 0.1, -0.05 + 0.3, -0.05,
             0.05 - 0.1, -0.05 + 0.3, -0.05,
             0.05 - 0.1,  0.05 + 0.3,  0.05,
             0.05 - 0.1, -0.05 + 0.3,  0.05,
             0.05 - 0.1,  0.05 + 0.3, -0.05,
             0.05 - 0.1,  0.05 + 0.3, -0.05,
             0.05 - 0.1, -0.05 + 0.3,  0.05,
             0.05 - 0.1, -0.05 + 0.3, -0.05,
            -0.05 - 0.1,  0.05 + 0.3, -0.05,
            -0.05 - 0.1, -0.05 + 0.3, -0.05,
            -0.05 - 0.1,  0.05 + 0.3,  0.05,
            -0.05 - 0.1,  0.05 + 0.3,  0.05,
            -0.05 - 0.1, -0.05 + 0.3, -0.05,
            -0.05 - 0.1, -0.05 + 0.3,  0.05,

            -0.05 - 0.2,  0.05 + 0.3,  0.05,
            -0.05 - 0.2, -0.05 + 0.3,  0.05,
             0.05 - 0.2,  0.05 + 0.3,  0.05,
             0.05 - 0.2,  0.05 + 0.3,  0.05,
            -0.05 - 0.2, -0.05 + 0.3,  0.05,
             0.05 - 0.2, -0.05 + 0.3,  0.05,
             0.05 - 0.2,  0.05 + 0.3, -0.05,
             0.05 - 0.2, -0.05 + 0.3, -0.05,
            -0.05 - 0.2,  0.05 + 0.3, -0.05,
            -0.05 - 0.2,  0.05 + 0.3, -0.05,
             0.05 - 0.2, -0.05 + 0.3, -0.05,
            -0.05 - 0.2, -0.05 + 0.3, -0.05,
            -0.05 - 0.2,  0.05 + 0.3, -0.05,
            -0.05 - 0.2,  0.05 + 0.3,  0.05,
             0.05 - 0.2,  0.05 + 0.3, -0.05,
             0.05 - 0.2,  0.05 + 0.3, -0.05,
            -0.05 - 0.2,  0.05 + 0.3,  0.05,
             0.05 - 0.2,  0.05 + 0.3,  0.05,
            -0.05 - 0.2, -0.05 + 0.3,  0.05,
            -0.05 - 0.2, -0.05 + 0.3, -0.05,
             0.05 - 0.2, -0.05 + 0.3,  0.05,
             0.05 - 0.2, -0.05 + 0.3,  0.05,
            -0.05 - 0.2, -0.05 + 0.3, -0.05,
             0.05 - 0.2, -0.05 + 0.3, -0.05,
             0.05 - 0.2,  0.05 + 0.3,  0.05,
             0.05 - 0.2, -0.05 + 0.3,  0.05,
             0.05 - 0.2,  0.05 + 0.3, -0.05,
             0.05 - 0.2,  0.05 + 0.3, -0.05,
             0.05 - 0.2, -0.05 + 0.3,  0.05,
             0.05 - 0.2, -0.05 + 0.3, -0.05,
            -0.05 - 0.2,  0.05 + 0.3, -0.05,
            -0.05 - 0.2, -0.05 + 0.3, -0.05,
            -0.05 - 0.2,  0.05 + 0.3,  0.05,
            -0.05 - 0.2,  0.05 + 0.3,  0.05,
            -0.05 - 0.2, -0.05 + 0.3, -0.05,
            -0.05 - 0.2, -0.05 + 0.3,  0.05,

            // BASE ATAS KANAN
            -0.05 + 0.1,  0.05 + 0.3,  0.05,
            -0.05 + 0.1, -0.05 + 0.3,  0.05,
             0.05 + 0.1,  0.05 + 0.3,  0.05,
             0.05 + 0.1,  0.05 + 0.3,  0.05,
            -0.05 + 0.1, -0.05 + 0.3,  0.05,
             0.05 + 0.1, -0.05 + 0.3,  0.05,
             0.05 + 0.1,  0.05 + 0.3, -0.05,
             0.05 + 0.1, -0.05 + 0.3, -0.05,
            -0.05 + 0.1,  0.05 + 0.3, -0.05,
            -0.05 + 0.1,  0.05 + 0.3, -0.05,
             0.05 + 0.1, -0.05 + 0.3, -0.05,
            -0.05 + 0.1, -0.05 + 0.3, -0.05,
            -0.05 + 0.1,  0.05 + 0.3, -0.05,
            -0.05 + 0.1,  0.05 + 0.3,  0.05,
             0.05 + 0.1,  0.05 + 0.3, -0.05,
             0.05 + 0.1,  0.05 + 0.3, -0.05,
            -0.05 + 0.1,  0.05 + 0.3,  0.05,
             0.05 + 0.1,  0.05 + 0.3,  0.05,
            -0.05 + 0.1, -0.05 + 0.3,  0.05,
            -0.05 + 0.1, -0.05 + 0.3, -0.05,
             0.05 + 0.1, -0.05 + 0.3,  0.05,
             0.05 + 0.1, -0.05 + 0.3,  0.05,
            -0.05 + 0.1, -0.05 + 0.3, -0.05,
             0.05 + 0.1, -0.05 + 0.3, -0.05,
             0.05 + 0.1,  0.05 + 0.3,  0.05,
             0.05 + 0.1, -0.05 + 0.3,  0.05,
             0.05 + 0.1,  0.05 + 0.3, -0.05,
             0.05 + 0.1,  0.05 + 0.3, -0.05,
             0.05 + 0.1, -0.05 + 0.3,  0.05,
             0.05 + 0.1, -0.05 + 0.3, -0.05,
            -0.05 + 0.1,  0.05 + 0.3, -0.05,
            -0.05 + 0.1, -0.05 + 0.3, -0.05,
            -0.05 + 0.1,  0.05 + 0.3,  0.05,
            -0.05 + 0.1,  0.05 + 0.3,  0.05,
            -0.05 + 0.1, -0.05 + 0.3, -0.05,
            -0.05 + 0.1, -0.05 + 0.3,  0.05,
        ])

        const vertices = new Float32Array([...outerVertices]);

        const positionAttr = new BufferAttribute(vertices, 3);

        const portal = new BufferGeometry();
        portal.setAttribute('position', positionAttr);

        const black = new BasicMaterial("black", [0, 0, 0])
        const grey = new BasicMaterial("grey", [0.5, 0.5, 0.5])

        var materials = []
        var assignSide = []
        for(let i = 0; i < 14; i++){
            materials.push(grey)
            materials.push(black)
            materials.push(black)
            materials.push(grey)
            materials.push(grey)
            materials.push(black)

            assignSide.push(0)
            assignSide.push(0)
            assignSide.push(1)
            assignSide.push(1)
            assignSide.push(1)
            assignSide.push(1)
        }

        console.log(materials)

        const mesh = new Mesh(portal, materials, assignSide); // Assuming materials is defined somewhere
        mesh.position.set(0, 0, 0);

        return mesh;
    }
}
