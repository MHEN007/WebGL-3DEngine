class NetherPortal {
    get object() {
        const outerVertices = new Float32Array([
            // KOLOM KIRI
            // depan
            -0.05 - 0.1,  0.05,  0.05,
            -0.05 - 0.1, -0.05,  0.05,
             0.05 - 0.1,  0.05,  0.05,
             0.05 - 0.1,  0.05,  0.05,
            -0.05 - 0.1, -0.05,  0.05,
             0.05 - 0.1, -0.05,  0.05,
             0.05 - 0.1,  0.05, -0.05,
             0.05 - 0.1, -0.05, -0.05,
            -0.05 - 0.1,  0.05, -0.05,
            -0.05 - 0.1,  0.05, -0.05,
             0.05 - 0.1, -0.05, -0.05,
            -0.05 - 0.1, -0.05, -0.05,
            -0.05 - 0.1,  0.05, -0.05,
            -0.05 - 0.1,  0.05,  0.05,
             0.05 - 0.1,  0.05, -0.05,
             0.05 - 0.1,  0.05, -0.05,
            -0.05 - 0.1,  0.05,  0.05,
             0.05 - 0.1,  0.05,  0.05,
            -0.05 - 0.1, -0.05,  0.05,
            -0.05 - 0.1, -0.05, -0.05,
             0.05 - 0.1, -0.05,  0.05,
             0.05 - 0.1, -0.05,  0.05,
            -0.05 - 0.1, -0.05, -0.05,
             0.05 - 0.1, -0.05, -0.05,
             0.05 - 0.1,  0.05,  0.05,
             0.05 - 0.1, -0.05,  0.05,
             0.05 - 0.1,  0.05, -0.05,
             0.05 - 0.1,  0.05, -0.05,
             0.05 - 0.1, -0.05,  0.05,
             0.05 - 0.1, -0.05, -0.05,
            -0.05 - 0.1,  0.05, -0.05,
            -0.05 - 0.1, -0.05, -0.05,
            -0.05 - 0.1,  0.05,  0.05,
            -0.05 - 0.1,  0.05,  0.05,
            -0.05 - 0.1, -0.05, -0.05,
            -0.05 - 0.1, -0.05,  0.05,

            -0.05 - 0.1,  0.05 + 0.1,  0.05,
            -0.05 - 0.1, -0.05 + 0.1,  0.05,
             0.05 - 0.1,  0.05 + 0.1,  0.05,
             0.05 - 0.1,  0.05 + 0.1,  0.05,
            -0.05 - 0.1, -0.05 + 0.1,  0.05,
             0.05 - 0.1, -0.05 + 0.1,  0.05,
             0.05 - 0.1,  0.05 + 0.1, -0.05,
             0.05 - 0.1, -0.05 + 0.1, -0.05,
            -0.05 - 0.1,  0.05 + 0.1, -0.05,
            -0.05 - 0.1,  0.05 + 0.1, -0.05,
             0.05 - 0.1, -0.05 + 0.1, -0.05,
            -0.05 - 0.1, -0.05 + 0.1, -0.05,
            -0.05 - 0.1,  0.05 + 0.1, -0.05,
            -0.05 - 0.1,  0.05 + 0.1,  0.05,
             0.05 - 0.1,  0.05 + 0.1, -0.05,
             0.05 - 0.1,  0.05 + 0.1, -0.05,
            -0.05 - 0.1,  0.05 + 0.1,  0.05,
             0.05 - 0.1,  0.05 + 0.1,  0.05,
            -0.05 - 0.1, -0.05 + 0.1,  0.05,
            -0.05 - 0.1, -0.05 + 0.1, -0.05,
             0.05 - 0.1, -0.05 + 0.1,  0.05,
             0.05 - 0.1, -0.05 + 0.1,  0.05,
            -0.05 - 0.1, -0.05 + 0.1, -0.05,
             0.05 - 0.1, -0.05 + 0.1, -0.05,
             0.05 - 0.1,  0.05 + 0.1,  0.05,
             0.05 - 0.1, -0.05 + 0.1,  0.05,
             0.05 - 0.1,  0.05 + 0.1, -0.05,
             0.05 - 0.1,  0.05 + 0.1, -0.05,
             0.05 - 0.1, -0.05 + 0.1,  0.05,
             0.05 - 0.1, -0.05 + 0.1, -0.05,
            -0.05 - 0.1,  0.05 + 0.1, -0.05,
            -0.05 - 0.1, -0.05 + 0.1, -0.05,
            -0.05 - 0.1,  0.05 + 0.1,  0.05,
            -0.05 - 0.1,  0.05 + 0.1,  0.05,
            -0.05 - 0.1, -0.05 + 0.1, -0.05,
            -0.05 - 0.1, -0.05 + 0.1,  0.05, 

            -0.05 - 0.1,  0.05 + 0.2,  0.05,
            -0.05 - 0.1, -0.05 + 0.2,  0.05,
             0.05 - 0.1,  0.05 + 0.2,  0.05,
             0.05 - 0.1,  0.05 + 0.2,  0.05,
            -0.05 - 0.1, -0.05 + 0.2,  0.05,
             0.05 - 0.1, -0.05 + 0.2,  0.05,
             0.05 - 0.1,  0.05 + 0.2, -0.05,
             0.05 - 0.1, -0.05 + 0.2, -0.05,
            -0.05 - 0.1,  0.05 + 0.2, -0.05,
            -0.05 - 0.1,  0.05 + 0.2, -0.05,
             0.05 - 0.1, -0.05 + 0.2, -0.05,
            -0.05 - 0.1, -0.05 + 0.2, -0.05,
            -0.05 - 0.1,  0.05 + 0.2, -0.05,
            -0.05 - 0.1,  0.05 + 0.2,  0.05,
             0.05 - 0.1,  0.05 + 0.2, -0.05,
             0.05 - 0.1,  0.05 + 0.2, -0.05,
            -0.05 - 0.1,  0.05 + 0.2,  0.05,
             0.05 - 0.1,  0.05 + 0.2,  0.05,
            -0.05 - 0.1, -0.05 + 0.2,  0.05,
            -0.05 - 0.1, -0.05 + 0.2, -0.05,
             0.05 - 0.1, -0.05 + 0.2,  0.05,
             0.05 - 0.1, -0.05 + 0.2,  0.05,
            -0.05 - 0.1, -0.05 + 0.2, -0.05,
             0.05 - 0.1, -0.05 + 0.2, -0.05,
             0.05 - 0.1,  0.05 + 0.2,  0.05,
             0.05 - 0.1, -0.05 + 0.2,  0.05,
             0.05 - 0.1,  0.05 + 0.2, -0.05,
             0.05 - 0.1,  0.05 + 0.2, -0.05,
             0.05 - 0.1, -0.05 + 0.2,  0.05,
             0.05 - 0.1, -0.05 + 0.2, -0.05,
            -0.05 - 0.1,  0.05 + 0.2, -0.05,
            -0.05 - 0.1, -0.05 + 0.2, -0.05,
            -0.05 - 0.1,  0.05 + 0.2,  0.05,
            -0.05 - 0.1,  0.05 + 0.2,  0.05,
            -0.05 - 0.1, -0.05 + 0.2, -0.05,
            -0.05 - 0.1, -0.05 + 0.2,  0.05,

            // KOLOM KANAN
            // depan
            -0.05 + 0.1,  0.05,  0.05,
            -0.05 + 0.1, -0.05,  0.05,
             0.05 + 0.1,  0.05,  0.05,
             0.05 + 0.1,  0.05,  0.05,
            -0.05 + 0.1, -0.05,  0.05,
             0.05 + 0.1, -0.05,  0.05,
             0.05 + 0.1,  0.05, -0.05,
             0.05 + 0.1, -0.05, -0.05,
            -0.05 + 0.1,  0.05, -0.05,
            -0.05 + 0.1,  0.05, -0.05,
             0.05 + 0.1, -0.05, -0.05,
            -0.05 + 0.1, -0.05, -0.05,
            -0.05 + 0.1,  0.05, -0.05,
            -0.05 + 0.1,  0.05,  0.05,
             0.05 + 0.1,  0.05, -0.05,
             0.05 + 0.1,  0.05, -0.05,
            -0.05 + 0.1,  0.05,  0.05,
             0.05 + 0.1,  0.05,  0.05,
            -0.05 + 0.1, -0.05,  0.05,
            -0.05 + 0.1, -0.05, -0.05,
             0.05 + 0.1, -0.05,  0.05,
             0.05 + 0.1, -0.05,  0.05,
            -0.05 + 0.1, -0.05, -0.05,
             0.05 + 0.1, -0.05, -0.05,
             0.05 + 0.1,  0.05,  0.05,
             0.05 + 0.1, -0.05,  0.05,
             0.05 + 0.1,  0.05, -0.05,
             0.05 + 0.1,  0.05, -0.05,
             0.05 + 0.1, -0.05,  0.05,
             0.05 + 0.1, -0.05, -0.05,
            -0.05 + 0.1,  0.05, -0.05,
            -0.05 + 0.1, -0.05, -0.05,
            -0.05 + 0.1,  0.05,  0.05,
            -0.05 + 0.1,  0.05,  0.05,
            -0.05 + 0.1, -0.05, -0.05,
            -0.05 + 0.1, -0.05,  0.05,

            -0.05 + 0.1,  0.05 + 0.1,  0.05,
            -0.05 + 0.1, -0.05 + 0.1,  0.05,
             0.05 + 0.1,  0.05 + 0.1,  0.05,
             0.05 + 0.1,  0.05 + 0.1,  0.05,
            -0.05 + 0.1, -0.05 + 0.1,  0.05,
             0.05 + 0.1, -0.05 + 0.1,  0.05,
             0.05 + 0.1,  0.05 + 0.1, -0.05,
             0.05 + 0.1, -0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1, -0.05,
             0.05 + 0.1, -0.05 + 0.1, -0.05,
            -0.05 + 0.1, -0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1,  0.05,
             0.05 + 0.1,  0.05 + 0.1, -0.05,
             0.05 + 0.1,  0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1,  0.05,
             0.05 + 0.1,  0.05 + 0.1,  0.05,
            -0.05 + 0.1, -0.05 + 0.1,  0.05,
            -0.05 + 0.1, -0.05 + 0.1, -0.05,
             0.05 + 0.1, -0.05 + 0.1,  0.05,
             0.05 + 0.1, -0.05 + 0.1,  0.05,
            -0.05 + 0.1, -0.05 + 0.1, -0.05,
             0.05 + 0.1, -0.05 + 0.1, -0.05,
             0.05 + 0.1,  0.05 + 0.1,  0.05,
             0.05 + 0.1, -0.05 + 0.1,  0.05,
             0.05 + 0.1,  0.05 + 0.1, -0.05,
             0.05 + 0.1,  0.05 + 0.1, -0.05,
             0.05 + 0.1, -0.05 + 0.1,  0.05,
             0.05 + 0.1, -0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1, -0.05,
            -0.05 + 0.1, -0.05 + 0.1, -0.05,
            -0.05 + 0.1,  0.05 + 0.1,  0.05,
            -0.05 + 0.1,  0.05 + 0.1,  0.05,
            -0.05 + 0.1, -0.05 + 0.1, -0.05,
            -0.05 + 0.1, -0.05 + 0.1,  0.05, 

            -0.05 + 0.1,  0.05 + 0.2,  0.05,
            -0.05 + 0.1, -0.05 + 0.2,  0.05,
             0.05 + 0.1,  0.05 + 0.2,  0.05,
             0.05 + 0.1,  0.05 + 0.2,  0.05,
            -0.05 + 0.1, -0.05 + 0.2,  0.05,
             0.05 + 0.1, -0.05 + 0.2,  0.05,
             0.05 + 0.1,  0.05 + 0.2, -0.05,
             0.05 + 0.1, -0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2, -0.05,
             0.05 + 0.1, -0.05 + 0.2, -0.05,
            -0.05 + 0.1, -0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2,  0.05,
             0.05 + 0.1,  0.05 + 0.2, -0.05,
             0.05 + 0.1,  0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2,  0.05,
             0.05 + 0.1,  0.05 + 0.2,  0.05,
            -0.05 + 0.1, -0.05 + 0.2,  0.05,
            -0.05 + 0.1, -0.05 + 0.2, -0.05,
             0.05 + 0.1, -0.05 + 0.2,  0.05,
             0.05 + 0.1, -0.05 + 0.2,  0.05,
            -0.05 + 0.1, -0.05 + 0.2, -0.05,
             0.05 + 0.1, -0.05 + 0.2, -0.05,
             0.05 + 0.1,  0.05 + 0.2,  0.05,
             0.05 + 0.1, -0.05 + 0.2,  0.05,
             0.05 + 0.1,  0.05 + 0.2, -0.05,
             0.05 + 0.1,  0.05 + 0.2, -0.05,
             0.05 + 0.1, -0.05 + 0.2,  0.05,
             0.05 + 0.1, -0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2, -0.05,
            -0.05 + 0.1, -0.05 + 0.2, -0.05,
            -0.05 + 0.1,  0.05 + 0.2,  0.05,
            -0.05 + 0.1,  0.05 + 0.2,  0.05,
            -0.05 + 0.1, -0.05 + 0.2, -0.05,
            -0.05 + 0.1, -0.05 + 0.2,  0.05,

            // BASE BAWAH
            -0.05,  0.05 - 0.1,  0.05,
            -0.05, -0.05 - 0.1,  0.05,
             0.05,  0.05 - 0.1,  0.05,
             0.05,  0.05 - 0.1,  0.05,
            -0.05, -0.05 - 0.1,  0.05,
             0.05, -0.05 - 0.1,  0.05,
             0.05,  0.05 - 0.1, -0.05,
             0.05, -0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1, -0.05,
             0.05, -0.05 - 0.1, -0.05,
            -0.05, -0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1,  0.05,
             0.05,  0.05 - 0.1, -0.05,
             0.05,  0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1,  0.05,
             0.05,  0.05 - 0.1,  0.05,
            -0.05, -0.05 - 0.1,  0.05,
            -0.05, -0.05 - 0.1, -0.05,
             0.05, -0.05 - 0.1,  0.05,
             0.05, -0.05 - 0.1,  0.05,
            -0.05, -0.05 - 0.1, -0.05,
             0.05, -0.05 - 0.1, -0.05,
             0.05,  0.05 - 0.1,  0.05,
             0.05, -0.05 - 0.1,  0.05,
             0.05,  0.05 - 0.1, -0.05,
             0.05,  0.05 - 0.1, -0.05,
             0.05, -0.05 - 0.1,  0.05,
             0.05, -0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1, -0.05,
            -0.05, -0.05 - 0.1, -0.05,
            -0.05,  0.05 - 0.1,  0.05,
            -0.05,  0.05 - 0.1,  0.05,
            -0.05, -0.05 - 0.1, -0.05,
            -0.05, -0.05 - 0.1,  0.05,
 
            -0.05 + 0.1,  0.05 - 0.1,  0.05,
            -0.05 + 0.1, -0.05 - 0.1,  0.05,
             0.05 + 0.1,  0.05 - 0.1,  0.05,
             0.05 + 0.1,  0.05 - 0.1,  0.05,
            -0.05 + 0.1, -0.05 - 0.1,  0.05,
             0.05 + 0.1, -0.05 - 0.1,  0.05,
             0.05 + 0.1,  0.05 - 0.1, -0.05,
             0.05 + 0.1, -0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1, -0.05,
             0.05 + 0.1, -0.05 - 0.1, -0.05,
            -0.05 + 0.1, -0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1,  0.05,
             0.05 + 0.1,  0.05 - 0.1, -0.05,
             0.05 + 0.1,  0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1,  0.05,
             0.05 + 0.1,  0.05 - 0.1,  0.05,
            -0.05 + 0.1, -0.05 - 0.1,  0.05,
            -0.05 + 0.1, -0.05 - 0.1, -0.05,
             0.05 + 0.1, -0.05 - 0.1,  0.05,
             0.05 + 0.1, -0.05 - 0.1,  0.05,
            -0.05 + 0.1, -0.05 - 0.1, -0.05,
             0.05 + 0.1, -0.05 - 0.1, -0.05,
             0.05 + 0.1,  0.05 - 0.1,  0.05,
             0.05 + 0.1, -0.05 - 0.1,  0.05,
             0.05 + 0.1,  0.05 - 0.1, -0.05,
             0.05 + 0.1,  0.05 - 0.1, -0.05,
             0.05 + 0.1, -0.05 - 0.1,  0.05,
             0.05 + 0.1, -0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1, -0.05,
            -0.05 + 0.1, -0.05 - 0.1, -0.05,
            -0.05 + 0.1,  0.05 - 0.1,  0.05,
            -0.05 + 0.1,  0.05 - 0.1,  0.05,
            -0.05 + 0.1, -0.05 - 0.1, -0.05,
            -0.05 + 0.1, -0.05 - 0.1,  0.05,

            -0.05 - 0.1,  0.05 - 0.1,  0.05,
            -0.05 - 0.1, -0.05 - 0.1,  0.05,
             0.05 - 0.1,  0.05 - 0.1,  0.05,
             0.05 - 0.1,  0.05 - 0.1,  0.05,
            -0.05 - 0.1, -0.05 - 0.1,  0.05,
             0.05 - 0.1, -0.05 - 0.1,  0.05,
             0.05 - 0.1,  0.05 - 0.1, -0.05,
             0.05 - 0.1, -0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1, -0.05,
             0.05 - 0.1, -0.05 - 0.1, -0.05,
            -0.05 - 0.1, -0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1,  0.05,
             0.05 - 0.1,  0.05 - 0.1, -0.05,
             0.05 - 0.1,  0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1,  0.05,
             0.05 - 0.1,  0.05 - 0.1,  0.05,
            -0.05 - 0.1, -0.05 - 0.1,  0.05,
            -0.05 - 0.1, -0.05 - 0.1, -0.05,
             0.05 - 0.1, -0.05 - 0.1,  0.05,
             0.05 - 0.1, -0.05 - 0.1,  0.05,
            -0.05 - 0.1, -0.05 - 0.1, -0.05,
             0.05 - 0.1, -0.05 - 0.1, -0.05,
             0.05 - 0.1,  0.05 - 0.1,  0.05,
             0.05 - 0.1, -0.05 - 0.1,  0.05,
             0.05 - 0.1,  0.05 - 0.1, -0.05,
             0.05 - 0.1,  0.05 - 0.1, -0.05,
             0.05 - 0.1, -0.05 - 0.1,  0.05,
             0.05 - 0.1, -0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1, -0.05,
            -0.05 - 0.1, -0.05 - 0.1, -0.05,
            -0.05 - 0.1,  0.05 - 0.1,  0.05,
            -0.05 - 0.1,  0.05 - 0.1,  0.05,
            -0.05 - 0.1, -0.05 - 0.1, -0.05,
            -0.05 - 0.1, -0.05 - 0.1,  0.05,

            // BASE ATAS
            -0.05,  0.05 + 0.3,  0.05,
            -0.05, -0.05 + 0.3,  0.05,
             0.05,  0.05 + 0.3,  0.05,
             0.05,  0.05 + 0.3,  0.05,
            -0.05, -0.05 + 0.3,  0.05,
             0.05, -0.05 + 0.3,  0.05,
             0.05,  0.05 + 0.3, -0.05,
             0.05, -0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3, -0.05,
             0.05, -0.05 + 0.3, -0.05,
            -0.05, -0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3,  0.05,
             0.05,  0.05 + 0.3, -0.05,
             0.05,  0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3,  0.05,
             0.05,  0.05 + 0.3,  0.05,
            -0.05, -0.05 + 0.3,  0.05,
            -0.05, -0.05 + 0.3, -0.05,
             0.05, -0.05 + 0.3,  0.05,
             0.05, -0.05 + 0.3,  0.05,
            -0.05, -0.05 + 0.3, -0.05,
             0.05, -0.05 + 0.3, -0.05,
             0.05,  0.05 + 0.3,  0.05,
             0.05, -0.05 + 0.3,  0.05,
             0.05,  0.05 + 0.3, -0.05,
             0.05,  0.05 + 0.3, -0.05,
             0.05, -0.05 + 0.3,  0.05,
             0.05, -0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3, -0.05,
            -0.05, -0.05 + 0.3, -0.05,
            -0.05,  0.05 + 0.3,  0.05,
            -0.05,  0.05 + 0.3,  0.05,
            -0.05, -0.05 + 0.3, -0.05,
            -0.05, -0.05 + 0.3,  0.05,
        ])

        const vertices = new Float32Array([...outerVertices]);

        const positionAttr = new BufferAttribute(vertices, 3);

        const portal = new BufferGeometry();
        portal.setAttribute('position', positionAttr);

        const black = new BasicMaterial("black", [0, 0, 0])

        var materials = [...Array(6*10 + 1).fill(black)]

        const mesh = new Mesh(portal, materials, [...Array(6*10).fill(1)]); // Assuming materials is defined somewhere
        mesh.position.set(0, 0, 0);

        return mesh;
    }
}
